package piccolo_ros;

public interface PiccoloWaypoint extends org.ros.internal.message.Message {
  static final java.lang.String _TYPE = "piccolo_ros/PiccoloWaypoint";
  static final java.lang.String _DEFINITION = "Header header\nuint16 vehicleid\nfloat32 latitude\nfloat32 longitude\nbool deployParachute\nbool deployDrop\nbool orbitDirection\nbool cameraTarget\nbool landingPoint\nbool slopeControl\nbool lightsOn\nbool preTurn\nuint8 orbitRadius\nfloat32 altitude\nuint8 windFind\nuint8 orbitTime\nuint8 index\nuint8 next\nuint8 user\nbool orbitAbove\nbool orbitBelow\nbool hoverPoint\nbool altitudeToGround\nbool orbitMultiplier50\nuint8 altLSB";
  std_msgs.Header getHeader();
  void setHeader(std_msgs.Header value);
  short getVehicleid();
  void setVehicleid(short value);
  float getLatitude();
  void setLatitude(float value);
  float getLongitude();
  void setLongitude(float value);
  boolean getDeployParachute();
  void setDeployParachute(boolean value);
  boolean getDeployDrop();
  void setDeployDrop(boolean value);
  boolean getOrbitDirection();
  void setOrbitDirection(boolean value);
  boolean getCameraTarget();
  void setCameraTarget(boolean value);
  boolean getLandingPoint();
  void setLandingPoint(boolean value);
  boolean getSlopeControl();
  void setSlopeControl(boolean value);
  boolean getLightsOn();
  void setLightsOn(boolean value);
  boolean getPreTurn();
  void setPreTurn(boolean value);
  byte getOrbitRadius();
  void setOrbitRadius(byte value);
  float getAltitude();
  void setAltitude(float value);
  byte getWindFind();
  void setWindFind(byte value);
  byte getOrbitTime();
  void setOrbitTime(byte value);
  byte getIndex();
  void setIndex(byte value);
  byte getNext();
  void setNext(byte value);
  byte getUser();
  void setUser(byte value);
  boolean getOrbitAbove();
  void setOrbitAbove(boolean value);
  boolean getOrbitBelow();
  void setOrbitBelow(boolean value);
  boolean getHoverPoint();
  void setHoverPoint(boolean value);
  boolean getAltitudeToGround();
  void setAltitudeToGround(boolean value);
  boolean getOrbitMultiplier50();
  void setOrbitMultiplier50(boolean value);
  byte getAltLSB();
  void setAltLSB(byte value);
}

package piccolo_ros;

public interface PiccoloTelemetry extends org.ros.internal.message.Message {
  static final java.lang.String _TYPE = "piccolo_ros/PiccoloTelemetry";
  static final java.lang.String _DEFINITION = "Header header\nuint16 vehicleid\nfloat32 latitude\nfloat32 longitude\nfloat32 altitude\nuint16 ias\nint16 vx\nint16 vy\nint16 vz\nint16 roll\nint16 pitch\nfloat32 yaw\nint16 barometricAltitude\nint16 windSouth\nint16 windWest\nuint16 leftRPM\nuint16 rightRPM\nuint16 staticPressure\nint16 accelX\nint16 accelY\nint16 accelZ\nuint16 compass\nuint16 agl\n";
  std_msgs.Header getHeader();
  void setHeader(std_msgs.Header value);
  short getVehicleid();
  void setVehicleid(short value);
  float getLatitude();
  void setLatitude(float value);
  float getLongitude();
  void setLongitude(float value);
  float getAltitude();
  void setAltitude(float value);
  short getIas();
  void setIas(short value);
  short getVx();
  void setVx(short value);
  short getVy();
  void setVy(short value);
  short getVz();
  void setVz(short value);
  short getRoll();
  void setRoll(short value);
  short getPitch();
  void setPitch(short value);
  float getYaw();
  void setYaw(float value);
  short getBarometricAltitude();
  void setBarometricAltitude(short value);
  short getWindSouth();
  void setWindSouth(short value);
  short getWindWest();
  void setWindWest(short value);
  short getLeftRPM();
  void setLeftRPM(short value);
  short getRightRPM();
  void setRightRPM(short value);
  short getStaticPressure();
  void setStaticPressure(short value);
  short getAccelX();
  void setAccelX(short value);
  short getAccelY();
  void setAccelY(short value);
  short getAccelZ();
  void setAccelZ(short value);
  short getCompass();
  void setCompass(short value);
  short getAgl();
  void setAgl(short value);
}

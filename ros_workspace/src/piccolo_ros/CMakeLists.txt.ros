cmake_minimum_required(VERSION 2.4.6)
include($ENV{ROS_ROOT}/core/rosbuild/rosbuild.cmake)

# Set the build type.  Options are:
#  Coverage       : w/ debug symbols, w/o optimization, w/ code-coverage
#  Debug          : w/ debug symbols, w/o optimization
#  Release        : w/o debug symbols, w/ optimization
#  RelWithDebInfo : w/ debug symbols, w/ optimization
#  MinSizeRel     : w/o debug symbols, w/ optimization, stripped binaries
set(ROS_BUILD_TYPE Debug)

rosbuild_init()

#set the default path for built executables to the "bin" directory
set(EXECUTABLE_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/bin)
#set the default path for built libraries to the "lib" directory
set(LIBRARY_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/lib)
#rosbuild_add_boost_directories()
#rosbuild_link_boost(piccolo_driver system thread  )
#rosbuild_link_boost(piccolo_payload system thread  )
#*************************************************
# Set Include Directories
#*************************************************
set(PICCOLO_SDK_LIB_INCLUDE_DIR ${PROJECT_SOURCE_DIR}/include/piccolosdk_include_dir)
set(ARTE_LIB_INCLUDE_DIR ${PROJECT_SOURCE_DIR}/include/libarte_include_dir)
set(PICCOLO_SDK_LIB_DIR ${PROJECT_SOURCE_DIR}/libs/piccolosdk_lib_dir)
set(ARTE_LIB_DIR ${PROJECT_SOURCE_DIR}/libs/artelib_lib_dir)
link_directories(${ARTE_LIB_DIR} ${PICCOLO_SDK_LIB_DIR})

rosbuild_add_executable(piccolo_payload src/piccolo_payload.cpp)
rosbuild_add_executable(piccolo_driver src/piccolo_driver.cpp)
rosbuild_add_executable(piccolo_controller src/piccolo_controller.cpp)
include_directories(${PICCOLO_SDK_LIB_INCLUDE_DIR} ${ARTE_LIB_INCLUDE_DIR})
target_link_libraries(piccolo_driver  piccolo arte)
target_link_libraries(piccolo_payload  piccolo arte)
#uncomment if you have defined messages
rosbuild_genmsg()
#uncomment if you have defined services
rosbuild_gensrv()

